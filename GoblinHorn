public float time;
public bool use = false;

public void EngageHorn()
{
  if(!use)
  {
    StartCourintine(effectGive());
  }
}


IENumberator effectGive()
{
   EnemyController[] controlEnable = (EnemyController[]) GameObject.FindObjectsOfType (typeof(EnemyController));
   
 foreach (EnemyController control in controllers)
 {
     controlEnable.health = control.health * 1.25;
     controlEnable.health = control.health + 30;

     
              foreach (Transform child in controlEnable.transform)
              {
                if(child.GetComponent<EnemyRange>())
                {
                child.GetComponent<EnemyRange>().range = child.GetComponent<EnemyRange>().range * 1.25;
                }
              }
 }
 
 yield return new WaitForSeconds(20);
 
    EnemyController[] controlDisable = (EnemyController[]) GameObject.FindObjectsOfType (typeof(EnemyController));
    
    
   
 foreach (EnemyController control in controllers)
 {
     controlDisable.health = control.health / 1.25;
     controlDisable.health = control.health - 30;
     
              foreach (Transform child in controlDisable.transform)
              {
                if(child.GetComponent<EnemyRange>())
                {
                child.GetComponent<EnemyRange>().range = child.GetComponent<EnemyRange>().range / 1.25;
                }
              }
 }
}
