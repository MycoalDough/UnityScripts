using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MutationSkin : MonoBehaviour //make sure to give arms the lunge script so they can attack

//give the player's spitter to see if the nearest enemy is negative if so then add force to the left
{
    public CharacterSkinController csc;
    public PlayerHealth ph;
    public Player player;

    public GameObject spore;
    [SerializeField] private bool stealthVal;
    public GameObject[] limbs;
    
    public GameObject[] armored;

    public GameObject arm1;
    public GameObject arm2;
    
    public GameObject claw1;
    public GameObject claw2;

    public GameObject zombieJaw;

    public Ragdoll rg;

    public GameObject homingMissile;
    public GameObject hmSpawn;

    public GameObject acidPoolGameObject;
    public void Start()
    {
        csc = gameObject.GetComponent<CharacterSkinController>();
        if(csc.skin != "Mutated")
        {
            enabled = false;
        }
        else
        {
            arm1.name = 20 + "";
            arm1.tag = "PlayerMelee";
            arm2.tag = "PlayerMelee";
            arm1.layer = 14;
            arm2.layer = 14;
            arm2.name = 20 + "";
            ph.maxHealth = 70;
            ph.currentHealth = 70;
        }
    }
    
    public void Update()
    {
        claw1.name = (ph.maxHealth / 2.5);
        claw2.name = claw1.name;
    }

    private void OnLevelWasLoaded(int level)
    {
        if(stealthVal)
        {
            StartCoroutine(stealthStart());
        }
    }

    IEnumerator stealthStart()
    {
        yield return new WaitForSeconds(1f);
        EnemyRange[] ranges = FindObjectsOfType(typeof(EnemyRange)) as EnemyRange[];
        foreach (EnemyRange range in ranges) 
        {
            range.range = range.range / 1.5f;
        }

    }


    public void tough()
    {
        ph.maxHealth = ph.maxHealth + 10;
        ph.currentHealth = ph.currentHealth + 10;
    }

    public void speed()
    {
        player.movementSpeed = player.movementSpeed + 15;
    }

    public void reach()
    {
        for (int i = 3; i < 6; i++)
        {
            limbs[i].gameObject.transform.localScale = new Vector3(limbs[i].gameObject.transform.localScale.x, limbs[i].gameObject.transform.localScale.y * 1.17f);
        }
    }

    public void mini()
    {
        for (int i = 0; i < limbs.Length; i++)
        {
            limbs[i].gameObject.transform.localScale = new Vector3(limbs[i].gameObject.transform.localScale.x * 0.9f, limbs[i].gameObject.transform.localScale.y * 0.9f);
        }
    }

    public void enbiggen()
    {
        for (int i = 0; i < limbs.Length; i++)
        {
            limbs[i].gameObject.transform.localScale = new Vector3(limbs[i].gameObject.transform.localScale.x * 1.05f, limbs[i].gameObject.transform.localScale.y * 1.05f);
        }
    }

    public void damage()
    {
        arm1.name = (int.Parse(arm1.name) + 5) + "";
        arm1.name = (int.Parse(arm2.name) + 5) + "";
    }

    public void crawler()
    {
        rg.ragdoll();
        arm1.name = (int.Parse(arm1.name) + 10) + "";
        arm2.name = (int.Parse(arm2.name) + 10) + "";
    }

    public void jaw()
    {
        zombieJaw.SetActive(true);
    }

    public void rocketArm()
    {
        hmSpawn.SetActive(true);
        TeslaShoot HW = hmSpawn.AddComponent<TeslaShoot>();
        HW.bullet = homingMissile;
        HW.range = 23;
        HW.targTag = "Enemy";
    }

    public void stealth()
    {
        for (int i = 0; i < limbs.Length; i++)
        {
            Color tmp = limbs[i].GetComponent<SpriteRenderer>().color;
            tmp.a = 140;
            stealthVal = true;
        }
    }

    public void acidPool()
    {
        ph.maxHealth = ph.maxHealth - 5;
        ph.currentHealth = ph.currentHealth - 5;
        acidPoolGameObject.SetActive(true);
    }
    
    public void claw()
    {
        claw1.setActive(true); 
        claw2.setACtive(true);
    }
    
    public void spore()
    {
        spore.setActive(true);
    }
    
    public void siren()
    {
        
    }
    
    public void armor()
    {
        ph.maxHealth += 5;
        ph.currentHealth += 5;
    }


}




//siren

public float time, maxTime;
{
    void Update()
    {
        time = time + Time.deltaTime;
        
        if(time > maxTime)
        {
            if(Input.GetKeyDown(KeyCode.Z))
            {
                //scream;
                //3 pulses, each one has a change to: stun, deal damage, make melee less damage
                time = 0;
            }
        }
    }
}
